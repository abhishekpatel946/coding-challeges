version: "3.8"

services:
    # PostgreSQL Database
    postgres:
        image: postgres:15-alpine
        container_name: urlshortener-postgres
        ports:
            - "5432:5432"
        environment:
            POSTGRES_DB: urlshortener
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
            POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
        volumes:
            - postgres_data:/var/lib/postgresql/data
            - ./init.sql:/docker-entrypoint-initdb.d/init.sql
        command: >
            postgres
            -c max_connections=500
            -c shared_buffers=512MB
            -c effective_cache_size=2GB
            -c maintenance_work_mem=128MB
            -c checkpoint_completion_target=0.9
            -c wal_buffers=32MB
            -c default_statistics_target=200
            -c random_page_cost=1.1
            -c effective_io_concurrency=400
            -c work_mem=8MB
            -c min_wal_size=2GB
            -c max_wal_size=8GB
            -c max_worker_processes=16
            -c max_parallel_workers_per_gather=8
            -c max_parallel_workers=16
            -c max_parallel_maintenance_workers=8
            -c synchronous_commit=off
            -c fsync=off
            -c full_page_writes=off
        restart: unless-stopped
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 10s
            timeout: 5s
            retries: 5
        deploy:
            resources:
                limits:
                    memory: 1G
                reservations:
                    memory: 512M

    redis:
        image: redis:7-alpine
        container_name: urlshortener-redis
        ports:
            - "6380:6379"
        volumes:
            - redis_data:/data
        command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5
        deploy:
            resources:
                limits:
                    memory: 256M
                reservations:
                    memory: 128M

    app:
        build: .
        container_name: urlshortener-app
        ports:
            - "8080:8080"
        environment:
            DB_HOST: postgres
            DB_PORT: 5432
            DB_USER: postgres
            DB_PASSWORD: password
            DB_NAME: urlshortener
            REDIS_HOST: redis
            REDIS_PORT: 6379
            PORT: 8080
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    memory: 512M
                    cpus: "2.0"
                reservations:
                    memory: 256M
                    cpus: "1.0"
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s

volumes:
    postgres_data:
    redis_data:
